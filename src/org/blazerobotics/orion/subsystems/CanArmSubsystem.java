// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.blazerobotics.orion.subsystems;

import org.blazerobotics.orion.RobotMap;
import org.blazerobotics.orion.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class CanArmSubsystem extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DigitalInput topLimitSwitch = RobotMap.canArmSubsystemTopLimitSwitch;
    DigitalInput bottomLimitSwitch = RobotMap.canArmSubsystemBottomLimitSwitch;    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    CANTalon leftWinchSpeedController = RobotMap.canArmSubsystemLeftWinchSpeedController;
    CANTalon rightWinchSpeedController = RobotMap.canArmSubsystemRightWinchSpeedController;

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void set(double power, boolean left, boolean right) {
    	leftWinchSpeedController.set(power * (left ? 1: 0));
    	rightWinchSpeedController.set(power*-1 * (right ? 1: 0));
    	
    }
    public void set(double power) {
    	set(power, true, true);
    }
    public boolean topLimit() {
    	return topLimitSwitch.get();
    }
    public boolean bottomLimit() {
    	return bottomLimitSwitch.get();
    }
}

